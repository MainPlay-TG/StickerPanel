name: Build Windows release
on:
  push:
    branches: [master]
jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: pip install -U -r build-requirements.txt

      - name: Build
        run: python3 build.py

      - name: Read release.yml
        uses: pietrobolcato/action-read-yaml@1.1.0
        id: read_yaml
        with:
          config: release.yml

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          tag_name: "${{ steps.read_yaml.outputs['full_name'] }}"
          release_name: "${{ steps.read_yaml.outputs['full_name'] }}"
          draft: false
          prerelease: false

      - name: Upload source to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          upload_url: "${{ steps.create_release.outputs.upload_url }}"
          asset_path: "${{ steps.read_yaml.outputs['release_src'] }}"
          asset_name: "${{ steps.read_yaml.outputs['full_name'] }}-src.zip"
          asset_content_type: application/zip

      - name: Upload executable to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          upload_url: "${{ steps.create_release.outputs.upload_url }}"
          asset_path: "${{ steps.read_yaml.outputs['release_exe'] }}"
          asset_name: "${{ steps.read_yaml.outputs['full_name'] }}-${{ steps.read_yaml.outputs['platform'] }}.zip"
          asset_content_type: application/zip
